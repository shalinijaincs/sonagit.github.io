1.Write a query to display Employee name, his salary along with the designation for all the employee.
->select name,salary,designation from employee_info;

2.Write a query to obtain name and his current salary and new salary with a hike 25 % for all the Employee.
->select name,salary,(salary+(salary*25/100)) as newsalary from employee_info;

3.Write a query to display all the details of the Employee who are working as salesman.
->select * from employee_info where designation="salesman";

4.Write a query to display all the employees of Dept.no 20.
->select * from employee_info where dept_id=20;

5.Write a query to display all the Employees DOB before 1994.
->select * from employee_info where dob<'1994-01-01';

6.Write a query to display all the employees whose annual salary is less than 30,000.
->select * from employee_info where (salary*12)<30000;

7.Write a query to display name, salary and Annual salary of all the clerks.
->select name,salary,(salary*12) as 'annual salary' from employee_info where designation='clerk';

8.Write a query to display all the details of Employee Whoever Hired after Feb of 2013.
->select * from employee_info where joining_date > '2013-02-01';

9.Write a query to display managers working in deptno 20 only if salary is greater than 2500.
->select * from employee_info where designation = 'manager' AND dept_id = 20 AND salary >25000;

10.Write a query to display all the employee excluding Analyst.
->select * from employee_info where designation<>'analyst';

11.Write a query to display all the employees excluding salesman who are working in department 30.
->select * from employee_info where designation<>'analyst' AND dept_id=30;

12.Write a query to display names of all the employee who are working in dept 30 as manager OR all the names of employee who are working as a clerk and salary less than 2000.
->select name from employee_info where (salary <2000 and designation='clerk') or (dept_id=30 And designation='manager');

13.Write a query to display all the Employees in dept 20 only if their salary is greater than 1000 and less than 3500, including 1000 & 3500.
->select * from employee_info where dept_id=20 and salary between 10000 and 35000;

14.Write a query to display all the details of Employees who are working as clerk in deptno 20,30 or 40.
->select * from employee_info where designation = 'clerk' AND dept_id in (20,30,40);

15.Write a query to display the details of software developer, manager or clerk who are working in dept.  10 or 20 and salary is greater than 1500.
->select * from employee_info where designation IN ('manager','software developer','clerk') AND dept_id in (10,20) AND salary >15000;

16. Write a query to display all the details of Employees who are working in department 10,20 excluding all the Salesman and Analyst.
->select * from employee_info where dept_id in (10,20) AND designation NOT IN ('salesman','analyst');

17. Write a query to display name, Salary for all the Employees who are working in dept 10 or 20 and their annual salary between 20,000 and 40,000 including the limits.
->select name,salary from employee_info where dept_id in (10,20) and (salary*12) between 200000 and 400000;

18.Write a query to display all the details of employees who were hire in the month of September working in dept 20 or 30.
->select * from employee_info where dept_id IN (20,30);

19.Write a query to display their name and DOJ of employee who works as salesman or clerk and their names has at least one S or E.
->select name,joining_date from employee_info where designation In('salesman','clerk') and (name LIKE '%s%' OR '%E%');

20.Write a query to display Average salary and Highest salary of dept. 20.
->select avg(salary),max(salary) from employee_info;

21.Write a query to display date of first and last Hired Employees.
->select min(joinig_date),max(joining_date) from employee_info;

22.Write a query to display AVG Salary of Employees by excluding president and manager(job).
->select avg(salary) from employee_info where designation NOT IN ('president','manager');

23.Write a query to display the total salary and average salary of each department
->select sum(salary),avg(salary) from employee_info group by dept_id;

24.Write a query to find the highest and least salary of an Employee in each job by excluding the employees whose name has ‘R’ as the last but one character.

26. Write a query to list the employee whose designation are same as Vikas    or Rahul.
->select * from employee_info where designation =(select designation from employee_info where name in ('rahul','vikas'));

27. Write a query to List the employee whose salary is equal to the average of max and minimum.
->select * from employee_info where salary = avg(salary);

28. Write a query to display employee name, department name and the location of all employee.
->select e.name,d.dept_name,d.location from employee_info e,department_info d where e.dept_id=d.dept_id;

29. Write a query to display all the details of employee whose name begins with the consonants.
->select * from employee_info where name like 'A%' OR 'E%' or 'I%' or 'O%' or 'U%';

30. Create a Views from Employee_Info table .Views should have all  the record whose salary is greater than 10000.
->CREATE
    /*[ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]
    [DEFINER = { user | CURRENT_USER }]
    [SQL SECURITY { DEFINER | INVOKER }]*/
    VIEW `techchefs_db`.`getsalary` 
    AS
    (SELECT * FROM employee_info where salary > 10000);
31.  Create a trigger which will work before deletion in employee_info table     and create a duplicate copy of the record in another table employee_backup
DELIMITER $$

CREATE
    /*[DEFINER = { user | CURRENT_USER }]*/
    TRIGGER `techchefs_db`.`backup` BEFORE DELETE
    ON `techchefs_db`.`employee_info`
    FOR EACH ROW BEGIN
	insert into employee_backup value(old.id,old.name,old.age,old.salary,old.designation,old.dept_id,old.mngr_id,old.joining_date,old.dob,old.email);
    END$$

DELIMITER ;
32.What is Driver Class?
->Driver class is provided by respective DB vendor which provides the implementation for JDBC interface to connect to respective database.
 Driver class is database vendor specific.

33.What is DB URL?
->DB URL identifies the unique database.
Syntax:protocol:sub protocol:sub name:[optional]
Ex.jdbc:mysql://localhost:3306?database_name

